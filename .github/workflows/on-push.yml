name: Build on push

on:
    push:
        branches:
            - main

jobs:
  build-amd64:
    name: Build image (AMD64)
    runs-on: ubuntu-20.04

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set env variables
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
          IMAGE_NAME="${GITHUB_REPOSITORY#*/}"
          echo "IMAGE_NAME=${IMAGE_NAME//docker-/}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u AaronDewes --password-stdin

      - name: Setup Docker buildx action
        uses: docker/setup-buildx-action@v1
        id: buildx

      - name: Run Docker buildx
        run: |
                docker buildx build \
                --cache-from "type=local,src=/tmp/.buildx-cache" \
                --cache-to "type=local,dest=/tmp/.buildx-cache" \
                --platform linux/amd64 \
                --tag ghcr.io/${{ secrets.DOCKER_CONTAINER_USERNAME }}/$IMAGE_NAME:$BRANCH \
                --output "type=registry" ./

  build-arm64:
    name: Build image (ARM64)
    runs-on: self-hosted

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Set env variables
        run: |
          echo "BRANCH=$(echo ${GITHUB_REF#refs/heads/} | sed 's/\//-/g')" >> $GITHUB_ENV
          IMAGE_NAME="${GITHUB_REPOSITORY#*/}"
          echo "IMAGE_NAME=${IMAGE_NAME//docker-/}" >> $GITHUB_ENV

      - name: Login to Docker Hub
        run: echo ${{ secrets.GHCR_TOKEN }} | docker login ghcr.io -u AaronDewes --password-stdin

      - name: Run Docker buildx
        run: |
                docker buildx build \
                --cache-from "type=local,src=/tmp/.buildx-cache" \
                --cache-to "type=local,dest=/tmp/.buildx-cache" \
                --platform linux/arm64 \
                --network host \
                --tag ghcr.io/${{ secrets.DOCKER_CONTAINER_USERNAME }}/$IMAGE_NAME:$BRANCH \
                --output "type=registry" ./
